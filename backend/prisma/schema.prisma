// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int @id @default(autoincrement())
  name     String
  cpf      String @unique
  email    String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Editora {
  id           Int  @id @default(autoincrement())
  nome         String
  emailContato String  @unique
  telefone     String?
  cnpj         String  @unique
  livros       Livro[]  @relation("EditoraLivros")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Aluno {
  id          Int       @id @default(autoincrement())
  nome        String
  email       String    @unique
  telefone    String?
  matricula   String    @unique
  emprestimos Emprestimo[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Emprestimo {
  id         Int      @id @default(autoincrement())
  alunoId    Int
  aluno      Aluno    @relation(fields: [alunoId], references: [id])
  livros     EmprestimoLivro[]
  dataInicio DateTime @default(now())
  dataFim    DateTime
  devolvido  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Livro {
  id           Int      @id @default(autoincrement())
  titulo       String
  autor        String
  isbn         String   @unique
  ano          Int
  dataInserido DateTime @default(now())
  isDisponivel Boolean  @default(true)
  genero       String
  editoraId    Int
  editora      Editora  @relation("EditoraLivros", fields: [editoraId], references: [id])
  emprestimos  EmprestimoLivro[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model EmprestimoLivro {
  id           Int        @id @default(autoincrement())
  emprestimoId Int
  livroId      Int
  emprestimo   Emprestimo @relation(fields: [emprestimoId], references: [id])
  livro        Livro      @relation(fields: [livroId], references: [id])
}